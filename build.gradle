buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
        springLoadedVersion = '1.2.6.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://reop.spring.io/release" }
        maven { url "https://plugins.gradle.org/m2/" }
//        maven { url "http://maven.wz-inc.com/content/repositories/releases/" }
//        maven { url "http://maven.wz-inc.com/content/repositories/snapshots/" }
//        maven { url "http://maven.wz-inc.com/content/repositories/central/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework:springloaded:${springLoadedVersion}")
    }
}

//task wrapper(type: Wrapper) { gradleVersion = '3.3' }

group 'com.moli'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

task createJavaProject << {
    sourceSets*.java.srcDirs*.each{ it.mkdirs() }
    sourceSets*.resources.srcDirs*.each{ it.mkdirs()}
}

jar {
    baseName = 'moli-admin'
    version = ''
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://reop.spring.io/release" }
    maven { url "https://plugins.gradle.org/m2/" }
//    maven {  url "http://maven.wz-inc.com/content/repositories/releases/" }
//    maven {  url "http://maven.wz-inc.com/content/repositories/snapshots/" }
//    maven {  url "http://maven.wz-inc.com/content/repositories/central/" }
}

ext { //定义版本号
    springBootVersion = '1.5.1.RELEASE'
    springLoadedVersion = '1.2.6.RELEASE'
    fastjsonVersion='1.2.20'
    commonsLang3Version='3.5'
}

configurations { // 所有需要忽略的包定义在此
    all*.exclude group: 'commons-httpclient'
    all*.exclude group: 'org.springframework', module: 'spring'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.apache.commons:commons-lang3:${commonsLang3Version}")
    compile("com.alibaba:fastjson:${fastjsonVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

eclipse {
    classpath {
        downloadSources = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
}
